@model E_Learning.Models.ListControllerValidation

<link href="~/Content/assets/css/PagedList.css" rel="stylesheet" />
<script src="~/Content/assets/Chonse/chosen.jquery.js"></script>
<link href="~/Content/assets/Chonse/chosen.css" rel="stylesheet" />

<style>
    input[type="checkbox"] {
        zoom: 1.3;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="modal-dialog" style="max-width:800px" id="formE">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="ModalTitle"></h5>
                <a href="#" class="close" data-dismiss="modal">&times;</a>
            </div>
            <div class="modal-body">
                @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
                @Html.HiddenFor(model => model.ID)
                <fieldset id="SubmitForm">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class=" mb-1 font-weight-bold float-left">Tên chức năng</label>
                                @Html.TextAreaFor(model => model.Mota, new { @class = "form-control", @rows = 1, placeholder = "Mô tả", @id = "Mota", })
                                @Html.ValidationMessageFor(model => model.Mota, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class=" mb-1 font-weight-bold float-left">Controller</label>
                                @Html.TextAreaFor(model => model.Controller, new { @class = "form-control", @rows = 1, placeholder = "Mô tả", @id = "Controller", })
                                @Html.ValidationMessageFor(model => model.Controller, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-12">
                            <div class=" form-group text-xl-left font-weight-bold">
                                <div class="font-weight-bold text-left">Quyền chi tiết</div>
                                @for (int i = 0; i < Model.LSChecked.Count; i++)
                                {
                                    <div class="col-md-3 font-weight-bold float-left text-left">
                                        @Html.CheckBoxFor(m => Model.LSChecked[i].isChecked)
                                        @Html.HiddenFor(m => Model.LSChecked[i].IDCN)
                                        @Model.LSChecked[i].Name
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group d-flex">
                                <div class="font-weight-bold float-left mr-1 text-danger">Hoạt động</div>
                                @Html.CheckBoxFor(m => m.isCheck)
                            </div>
                        </div>
                    </div>
                    <div class="btn-margin-top text-center">
                        <input type="submit" value="Xác nhận" class="btn btn-primary pull-right" />
                    </div>
                </fieldset>
            </div>
        </div>
    </div>
}


<script type="text/javascript">

    $(document).ready(function () {
        $(".multiSelectDropDownQAs").chosen({
            width: "100%",
        });
        $("#multiSelectDropDownQAs_chosen .chosen-search-input").val("Chọn nhân viên");

        //$(".selec").on("change", function () {
        //    var idpb = $(this).attr('id');
        //    var idv = $(this).val();

        //    if (idpb == "IDNhom") {
        //        $("#IDPX").append("<option value ='" + null + "'>" + "--Chọn Nhóm--" + "</option>");
        //        console.log("HHH", idpb, idv);
        //    }
        //});


        async function RemNV(url, params, method) {
            return $.ajax({
                url: url,
                type: method || 'GET',
                dataType: 'json',
                data: params
            });
        }

        $("#Remove_NV").click(async function () {
            //console.log('ssss33');
            let arr = [];
            $("input[name='CheckRemove']:checked").each(function () {
                arr.push($(this).attr('id'));
                //console.log($(this).attr('id'));
                //const mnv = $(this).attr('id');
                //const result = await RemNV("FPosition/DeleteNVIDKNLJSON", { manv: mnv });
                //console.log("midle");
                //$.get("FPosition/DeleteNVIDKNLJSON", { manv: mnv }, async function (data1) {
                //    //location.reload(true);
                //}).fail(function () {
                //    //location.reload(true);
                //});
            });
            const promises = arr.map(async id => {
                const result = await RemNV("FPosition/DeleteKNLDGJSON", { ID: id });
                return result;
            })
            const numFruits = await Promise.all(promises)
            //console.log(numFruits);
            $.get("FPosition/getKNLDGJSON", { id: $("#IDVT").val(), IDPB: $("#IDPhongBan").val() }, function (data1) {
                //console.log('get list neww');
                $("#ListNV").empty();
              /*  $("#ListNV").append("<label class='mb-1 font-weight-bold float-left'>Các vị trí đánh giá</label>");*/
                $.each(data1, function (index, row) {
                    $("#ListNV").append(`<div class="col-md-12 font-weight-bold float-left text-left">
                                        <input type="checkbox" aria-label="Checkbox for following text input" name="CheckRemove" id=${row.IDVT}>
                                        ${row.TenViTri}
                                    </div>`);
                });
            });
            //console.log('5555555555555555');
        });

        $(document).on("click", ".checkNV", function () {
            /*var iddex = $(this).attr('id').split("_")[1];*/
            $.get("/FPosition/CheckNV", { lsnv: $("#NVDG").val() }, function (data) {
                if (data[0] != null) {
                    $("#dsnv").empty();
                    /*$("#dsnv").append("<option value ='" + null + "'>" + "--Chọn Phân Xưởng--" + "</option>")*/
                    $.each(data, function (index, row) {
                        $("#dsnv").append("<div>" + row.HoTen + "</div>")
                    });

                }
                else {
                    $("#dsnv").empty();
                }
            });
        });
    });

</script>
<style>
    .chosen-container-single .chosen-single {
        color: #495057;
        background: #fff;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        border-radius: .25rem;
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.8;
        text-transform: capitalize;
    }

        .chosen-container-single .chosen-single span {
            text-transform: capitalize !important;
            font-size: 16px !important;
        }
</style>



