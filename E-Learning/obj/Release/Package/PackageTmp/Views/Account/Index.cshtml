
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using E_Learning.Models
@model PagedList.IPagedList<EmployeeValidation>
@using PagedList.Mvc

@if (TempData["msgSuccess"] != null)
{
    @Html.Raw(TempData["msgSuccess"])
}
@if (TempData["msgError"] != null)
{
    @Html.Raw(TempData["msgError"])
}

<link href="~/Content/assets/css/PagedList.css" rel="stylesheet" />
<div class="app-main__outer">
    <div class="app-main__inner">

        <div class="app-page-title">
            <div class="page-title-wrapper">
                <div class="page-title-heading">
                    <div class="page-title-icon">
                        <i class="pe-7s-portfolio icon-gradient bg-grow-early">
                        </i>
                    </div>
                    <div>
                        Tài khoản
                        <div class="page-title-subheading">
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class="tab-content">
            <div class="row">
                <div class="card col-lg-12">

                    <div class="card-header">
                        <div class="row" style="width:100%">
                            <div class="col-md-5 col-lg-5">
                                <div class="row">
                                    @*<div class="col-md-7">
                                            <input type="text" id="txtsearch" name="" placeholder="Tìm kiếm" class="form-control" value="@ViewBag.search">
                                        </div>
                                        <div class="col-md-5">
                                            <button class="btn btn-primary" id="btn-search"><i class="fa fa-search"></i> Tìm kiếm</button>
                                        </div>*@
                                </div>
                            </div>
                            @if ((ViewBag.QUYENCN as List<String>).Contains(CONSTKEY.R_PASS))
                            {
                                <div class="clo-md-3 m-l-auto">
                                    <button type="button" id="btn-re" class="btn btn-success m-l-auto"><i class="fa fa-key">&nbsp;</i>&nbsp;Reset Password </button>
                                    <div class="modal fade" id="myModalRe" role="dialog" data-url='@Url.Action("ResetListPass","Account")'></div>
                                </div>
                            }
                            <div class="col-md-4">
                                @if ((ViewBag.QUYENCN as List<String>).Contains(CONSTKEY.SYC))
                                {
                                    <a href="@Url.Action("Sync","EmployeeAPI")" class="btn btn-primary ml-2 pull-right"><i class="pe-7s-repeat">&nbsp;</i>&nbsp;Đồng bộ </a>
                                }
                                <div class="modal fade" id="myModal" role="dialog" data-url=''></div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <div class="table-responsive">
                                <table class="table table-bordered table-hover" id="table" width="100%" cellpadding="0">
                                    <thead>
                                        <tr>
                                            <th width="30px" class="text-center">STT</th>
                                            <th class="text-center" width="50px">Thao tác</th>
                                            <th class="text-center" width="50px">Mã NV</th>
                                            <th class="text-center">Họ tên</th>
                                            <th class="text-center">Phòng ban</th>
                                            <th class="text-center">Quyền</th>
                                        </tr>
                                    </thead>
                                    @*<tbody>

                                        </tbody>*@
                                </table>
                                @*<div class="pager">
                                        @Html.PagedListPager(Model, page => Url.Action("Index", "Account", new { page }))
                                        <span class="pageoff">Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount</span>
                                    </div>*@
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>


    <div class="app-wrapper-footer">
        <div class="app-footer">
            <div class="app-footer__inner">

            </div>
        </div>
    </div>


</div>
@*<script src="https://cdn.datatables.net/buttons/2.3.6/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.html5.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>*@
<script type="text/javascript">
    $('#btn-add').click(function () {
        var url = $('#myModal').data('url');
        $.get(url, function (data) {
            $("#myModal").html(data);
            $("#ModalTitle").html("Thêm tài khoản");
            $("#myModal").modal('show');
        });
    });
    $('#btn-re').click(function () {
        var url = $('#myModalRe').data('url');
        $.get(url, function (data) {
            $("#myModalRe").html(data);
            $("#ModalTitle").html("Reset Pass List");
            $("#myModalRe").modal('show');
        });
    });
     $("#btn-search").on('click', function () {
        var search = $('#txtsearch').val();
        window.location.href = '@Url.Action("Index", "Account")?search=' + search;
     });

    $(document).ready(function () {
        bindDatatable();
    });


    function bindDatatable() {

        function newexportaction(e, dt, button, config) {

            var self = this;
            var oldStart = dt.settings()[0]._iDisplayStart;
            dt.one('preXhr', function (e, s, data) {

                // Just this once, load all data from the server...
                data.start = 0;
                data.length = 2147483647;
                data.iDisplayLength = 100000;
                dt.one('preDraw', function (e, settings) {
                    // Call the original action function
                    if (button[0].className.indexOf('buttons-copy') >= 0) {
                        $.fn.dataTable.ext.buttons.copyHtml5.action.call(self, e, dt, button, config);
                    } else if (button[0].className.indexOf('buttons-excel') >= 0) {
                        $.fn.dataTable.ext.buttons.excelHtml5.available(dt, config) ?
                            $.fn.dataTable.ext.buttons.excelHtml5.action.call(self, e, dt, button, config) :
                            $.fn.dataTable.ext.buttons.excelFlash.action.call(self, e, dt, button, config);
                    } else if (button[0].className.indexOf('buttons-csv') >= 0) {
                        $.fn.dataTable.ext.buttons.csvHtml5.available(dt, config) ?
                            $.fn.dataTable.ext.buttons.csvHtml5.action.call(self, e, dt, button, config) :
                            $.fn.dataTable.ext.buttons.csvFlash.action.call(self, e, dt, button, config);
                    } else if (button[0].className.indexOf('buttons-pdf') >= 0) {
                        $.fn.dataTable.ext.buttons.pdfHtml5.available(dt, config) ?
                            $.fn.dataTable.ext.buttons.pdfHtml5.action.call(self, e, dt, button, config) :
                            $.fn.dataTable.ext.buttons.pdfFlash.action.call(self, e, dt, button, config);
                    } else if (button[0].className.indexOf('buttons-print') >= 0) {
                        $.fn.dataTable.ext.buttons.print.action(e, dt, button, config);
                    }
                    dt.one('preXhr', function (e, s, data) {
                        console.log(data)
                        // DataTables thinks the first item displayed is index 0, but we're not drawing that.
                        // Set the property to what it was before exporting.
                        settings._iDisplayStart = oldStart;
                        data.start = oldStart;
                    });
                    // Reload the grid with the original page. Otherwise, API functions like table.cell(this) don't work properly.
                    setTimeout(dt.ajax.reload, 0);
                    // Prevent rendering of the full data to the DOM
                    return false;
                });
            });
            // Requery the server with the new one-time export settings
            dt.ajax.reload();
        };

        datatable = $('#table')
            .DataTable({
                //dom: 'Blfrtip',
                //buttons: [
                //    {
                //        "extend": 'excel',
                //        "text": '<button class="btn"><i class="fa fa-file-excel-o" style="color: green;"></i>  Excel</button>',
                //        "titleAttr": 'Excel',
                //        "action": newexportaction
                //    }
                //],
                "sAjaxSource": "/Account/GetData",
                "bServerSide": true,
                "bProcessing": true,
                "bSearchable": true,
                "oLanguage": {
                    "sSearch": "Tìm kiếm:",
                },
                "iDisplayLength": 50,
                "order": [[1, 'asc']],
                "language": {
                    "emptyTable": "No record found.",
                    "processing":
                        '<i class="fa fa-spinner fa-spin fa-3x fa-fw" style="color:#2a2b2b;"></i><span class="sr-only">Loading...</span> '
                },
                "columns": [
                    {
                        "render": function (data, type, full, meta) {
                            return meta.settings._iDisplayStart + meta.row +1;
                        },
                        "autoWidth": true,
                        "searchable": false,
                        "className": 'text-center'
                    },
                    {
                        "data": "ID",
                        "render": function (data, type, full, meta) {
                            var checkRS = '@((ViewBag.QUYENCN as List<String>).Contains(CONSTKEY.R_PASS))';
                            var checkED = '@((ViewBag.QUYENCN as List<String>).Contains(CONSTKEY.EDIT))';
                            var rs = "";
                            //console.log(checkED, checkRS)
                            if (checkRS.toLowerCase() == "true") {
                                rs = `<a id="btn-reset_${data}" href="#" title="Reset password" class="btn-action Reset"><i class="fa fa-key"></i> </a>
                                                            <div class="modal fade" id="myModale_${data}" role="dialog" data-url='/Account/Resetpass/${data}'></div>`;
                            }
                            if (checkED.toLowerCase() == "true") {
                                rs = rs + `<a id="btn-edit_${data}" href="#" title="Phân quyền" class="btn-action Edit"><i class="fa fa-edit"></i> </a>
                                                            <div class="modal fade" id="myModaleEdit_${data}" role="dialog" data-url='/Account/Edit/${data}'></div>`;
                            }
                            return rs;
                        },
                        "autoWidth": false,
                        "searchable": false,
                        "className": 'text-center'
                    },
                    {
                        "data": "MaNV",
                        "autoWidth": true,
                        "searchable": false
                    },
                    {
                        "data": "HoTen",
                        "autoWidth": true,
                        "searchable": false
                    },
                    {
                        "data": "PhongBan",
                        "autoWidth": true,
                        "searchable": false
                    },
                    {
                        "data": "TenQuyen",
                        "autoWidth": true,
                        "searchable": false
                    },

                ]
            });
    }

    $('#table').on('click', '.Reset', function () {
        var data = $(this).attr('id').split("_")[1];
        var link = `#myModale_${data}`;
        var url = $(link).data('url');
        $.get(url, function (data) {
            $("#myModal").html(data);
            $("#ModalTitle").html("Cập nhật mật khẩu");
            $("#myModal").modal('show');
        });
    });

    $('#table').on('click', '.Edit', function () {
        var data = $(this).attr('id').split("_")[1];
        var link = `#myModaleEdit_${data}`;
        var url = $(link).data('url');
        $.get(url, function (data) {
            $("#myModal").html(data);
            $("#ModalTitle").html("Cập nhật quyền");
            $("#myModal").modal('show');
        });
    });

</script>


